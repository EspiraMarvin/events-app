import Head from "next/head"
import Link from "next/link"
import { useSession, getSession } from "next-auth/react"
import Header from "../components/Header"
import Calendar from "../components/Calendar"
import { useSelector } from "react-redux"
import { getAllEvents } from "../slices/eventSlice"

const Home = () => {
  const { data: session } = useSession()

  return (
    <div className="">
      <Head>
        <title>Home Page</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {session ? User({ session }) : Guest()}
    </div>
  )
}

export default Home

// Guest
function Guest() {
  return (
    <main className="container py-20 mx-auto text-center">
      <h3 className="text-4xl font-bold">Guest Homepage</h3>
      <div className="flex justify-center">
        <Link href={"/login"}>
          <a className="px-10 py-1 mt-5 bg-indigo-500 rounded-sm text-gray-50">
            Sign In
          </a>
        </Link>
      </div>
    </main>
  )
}

// Authorize User
function User({ session, users }: any) {
  console.log("sessionnn", session)
  console.log("users at index.js", users)
  const allEvents = useSelector(getAllEvents)

  return (
    <main className="">
      {/* <div className="details">
        <h5>Unknown- {session.user.name}</h5>
        <h5>Unknown - {session.user.email}</h5>
      </div>

      <div className="flex justify-center">
        <button
          className="px-10 py-1 mt-5 rounded-sm bg-gray-50"
          onClick={handleSignout}
        >
          Sign Out
        </button>
      </div> */}

      {/* <Link href={"/profile"}>
          <a className="px-10 py-1 mt-5 bg-indigo-500 rounded-sm text-gray-50">
            Profile Page
          </a>
        </Link> */}
      <main className="h-screen pt-12 bg-white dark:bg-black md:h-screen">
        <Header />
        <div className="max-w-md pt-6 mx-auto sm:px-7 md:max-w-4xl md:px-6 md:pt-5">
          <Calendar events={allEvents} />
        </div>
      </main>
    </main>
  )
}

export async function getServerSideProps({ req }: any) {
  const session = await getSession({ req })

  if (!session) return { redirect: { destination: "/login", permanent: false } }

  return {
    props: { session },
  }
}
